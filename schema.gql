# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type BaseDday {
  data: [Dday!]!
  count: Float!
}

type Calendar {
  calendar_id: Float!
  start_dt: DateTime!
  end_dt: DateTime!
  message: String!
  check_yn: String!
  type: Float!
  group_id: String!
}

type Chat {
  chat_id: Float!
  message: String!
  date: DateTime!
  email: String!
  room_id: String!
  name: String!
  image: String!
  profile_img: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Dday {
  start_dt: DateTime!
  end_dt: DateTime!
  group_id: String!
  user_id: String!
  title: String!
  dday_id: Float!
  dday_list: [DdayItem!]!
  visible_yn: String!
  _user: [User!]!
}

type DdayItem {
  dday_model_id: String!
  dday_message: String!
  check_yn: String!
  visible_yn: String!
}

type Memo {
  title: String!
  message: String!
  memo_id: Float!
  date: DateTime!
  group_id: String!
  _user: [User!]!
}

type Movie {
  rank: String!
  movieNm: String!
  openDt: String!
}

type Mutation {
  markAsCompleted(taskId: Float!): Task!
  createCalendar(group_id: String!, type: Float!, check_yn: String!, message: String!, end_dt: String!, start_dt: String!): Calendar
  createPost(tags: [String!], image: [String!], group_id: String!, alignment: Float!, sub_title: String!, title: String!, message: String!, date: String!): Post
  createMemo(group_id: String!, date: String!, message: String!, title: String!): Memo
  updateMemo(group_id: String!, date: String!, message: String!, title: String!, memo_id: Float!): Memo
  delMemoId(memo_id: Float!): Memo
  createNotice(content_url: String!, visible: String!, content: String!, title: String!, date: String!, profile_img: String!): Notice
  createDday(dday_list: String!, title: String!, group_id: String!, end_dt: String!, start_dt: String!): Dday
  updateDday(dday_list: String!, title: String!, group_id: String!, end_dt: String!, start_dt: String!, dday_id: Float!): Dday
  deleteDday(dday_id: Float!): Dday
}

type Notice {
  notice_id: Float!
  profile_img: String!
  date: DateTime!
  title: String!
  content: String!
  visible: String!
  content_url: String!
  user_id: String!
}

type Place {
  lat: String!
  lon: String!
  name: String!
}

type Post {
  image: [String!]
  date: DateTime!
  message: String!
  tags: [String!]
  title: String!
  sub_title: String!
  alignment: Float!
  post_id: Float!
  _user: [User!]!
}

type Project {
  id: Int!
  name: String!
  tasks: [Task!]!
}

type Query {
  projectByName(name: String!): Project
  fetchTasks: [Task!]!
  getTask(id: Float!): Task
  getMovie: [Movie!]
  getPlace(type: String!, location: String!): [Place!]
  getCalendars(group_id: String!, start_dt: String!): [Calendar!]
  getPost(group_id: String!, offset: Float!, limit: Float!): ResultPost
  getPostId(post_id: Float!): Post
  getChat(room_id: String!, offset: Float!, limit: Float!): ResultChat
  getMemoList(group_id: String!, offset: Float!, limit: Float!): ResultMemo
  getMemoId(memo_id: Float!): Memo
  getNoticeList(offset: Float!, limit: Float!): ResultNotice
  getDdayList(group_id: String!, offset: Float!, limit: Float!): BaseDday
  getDdayId(dday_id: Float!): Dday
}

type ResultChat {
  data: [Chat!]!
  count: Float!
}

type ResultMemo {
  data: [Memo!]!
  count: Float!
}

type ResultNotice {
  data: [Notice!]!
  count: Float!
}

type ResultPost {
  data: [Post!]!
  count: Float!
}

type Task {
  id: Int!
  title: String!
  project: Project!
  completed: Boolean!
}

type User {
  profile_img: String!
  name: String!
  email: String!
}
